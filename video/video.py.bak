from __future__ import print_function
import glob
import os
import time
from subprocess import Popen
from PIL import Image
from core import core

__author__ = 'boselowitz'

FFMPEG = "ffmpeg"
VIDEOS_DIR = os.path.join(os.path.dirname(__file__), "videos")
FRAMES_DIR = os.path.join(os.path.dirname(__file__), "frames")
FRAME_FILE_TYPES = ["*.png", "*.jpg", "*.gif"]
FPS = 12.0


def display_function(x):
    if x > 20:
        return 255
    else:
        return 0


def display_video(video_name):
    image_types = FRAME_FILE_TYPES
    image_files = []
    for image_type in image_types:
        image_files.extend(glob.glob(os.path.join(os.path.abspath(os.path.join(FRAMES_DIR, video_name)), image_type)))

    if len(image_files) == 0:
        print("Could not find frames.")
        return

    image_files = sorted(image_files)
    for image_file in image_files:
        image = Image.open(image_file)
        image = image.convert("1")
        # image = image.point(display_function)
        (width, height) = image.size
        image_list = list(image.getdata())

        fill_value = ""
        for col in range(width):
            col_value = 0
            for row in range(height):
                pixel = image_list[(row * width) + col]
                if pixel:
                    col_value |= ord(core.BITMASK[6 - row])
            fill_value += chr(col_value)
        core.fill(fill_value)
        time.sleep(1.0 / FPS)


def convert_video_to_frames(video_name):
    frames_path = os.path.join(FRAMES_DIR, video_name)
    if not os.path.exists(FRAMES_DIR):
        os.makedirs(FRAMES_DIR)
        os.makedirs(frames_path)
    elif not os.path.exists(frames_path):
        os.makedirs(frames_path)

    full_video_path = os.path.abspath(os.path.join(VIDEOS_DIR, video_name))
    starting_dir = os.getcwd()
    os.chdir(frames_path)

    p = Popen([FFMPEG, "-r", str(FPS), "-i", full_video_path, "-vcodec", "png", "%5d.png"])
    p.wait()

    os.chdir(starting_dir)
